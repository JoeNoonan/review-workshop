library(tidyverse)
library(writexl)


gsodi_long <- read_csv("gsodi_long_ci_rank_regions_adv_dec_regime_v5_2019.csv") %>% 
  filter(!is.na(ID_variable_name))%>% 
  group_by(ID_country_name, ID_variable_name) %>% 
  mutate(decades = ifelse(between(ID_year, 2017, 2018), "2017-2018",
                          ifelse(between(ID_year, 2007, 2016), "2007-2016",
                                 ifelse(between(ID_year, 1996,2006), "1996-2006",
                                        ifelse(between(ID_year, 1985,1995), "1985-1995",
                                               ifelse(between(ID_year, 1975,1984), "1975-1984",NA))))),
         regime_status_name_5_year = lag(regime_status_name, 5),
         regime_status_change_1_year = regime_status - lag(regime_status, 1),
         regime_status_change_4_year = regime_status - lag(regime_status, 4), 
         regime_status_change_5_year = regime_status - lag(regime_status, 5),
         regime_status_change_10_year = regime_status - lag(regime_status, 10), 
         regime_status_change_20_year = regime_status - lag(regime_status, 20),
         dem_transition = ifelse((regime_status == 3 & lag(regime_status, 1)!= 3)|(regime_status == 3 & is.na(lag(regime_status, 1)) & ID_year != 1975), 1, 0),
         dem_breakdown = ifelse(regime_status != 3 & lag(regime_status, 1) == 3, 1, 0),
         regime_change_class = ifelse(regime_status_change_1_year == -2, "Dem to Non-Dem",
                                      ifelse(regime_status_change_1_year == -1 & regime_status == 1, "Hybrid to Non-Dem",
                                             ifelse(regime_status_change_1_year == -1 & regime_status == 2, "Dem to Hybrid",
                                                    ifelse(regime_status_change_1_year == 1 & regime_status == 2, "Non-Dem to Hybrid",
                                                           ifelse(regime_status_change_1_year == 1 & regime_status == 3, "Hybrid to Dem",
                                                                  ifelse(regime_status_change_1_year == 2 & regime_status == 3, "Non-Dem to Dem", NA)))))))


##### sig declines 

change_variables <- names(gsodi_long)[38:65]

gsodi_long_sig_change <- gsodi_long %>%
  select(ID_country_name, ID_region_name, ID_subregion_name, ID_year, ID_variable_name, ID_a_sa_sc,  value, change_variables)

#write_excel_csv(gsodi_long_sig_change, paste0(getwd(),"/sig_changes_advancer_decliner/Sig Change -  Country Level - 2019 V5.csv"))
write_xlsx(gsodi_long_sig_change, paste0(getwd(),"/sig_changes_advancer_decliner/Sig Change -  Country Level - 2019 V5.xlsx"))



#### Summary sig declines by subegion

advancer_decliner_summary_by_subregion <- gsodi_long_sig_change %>% 
  group_by(ID_variable_name, ID_year, ID_region_name, ID_subregion_name) %>% 
  summarize(Advancer_1_Year = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_1_Year = sum(neg_sig_1_years == 1, na.rm=TRUE), 
            Advancer_4_Year = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_4_Year = sum(neg_sig_4_years == 1, na.rm=TRUE),
            Advancer_5_Year = sum(pos_sig_5_years == 1, na.rm=TRUE),
            Decliner_5_Year = sum(neg_sig_5_years == 1, na.rm=TRUE),
            Advancer_10_Year = sum(pos_sig_10_years == 1, na.rm=TRUE),
            Decliner_10_Year = sum(neg_sig_10_years == 1, na.rm=TRUE),
            Advancer_20_Year = sum(pos_sig_20_years == 1, na.rm=TRUE),
            Decliner_20_Year = sum(neg_sig_20_years == 1, na.rm=TRUE),
            Advancer_42_Year = sum(pos_sig_42_years == 1, na.rm=TRUE),
            Decliner_42_Year = sum(neg_sig_42_years == 1, na.rm=TRUE))

#write_excel_csv(advancer_decliner_summary_by_subregion, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner All Timespan By Subregion - 2019 V5.csv"))
write_xlsx(advancer_decliner_summary_by_subregion, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner All Timespan By Subregion - 2019 V5.xlsx"))

#### Summary sig declines by Region

advancer_decliner_summary_by_region <- gsodi_long_sig_change %>% 
  group_by(ID_variable_name, ID_year, ID_region_name) %>% 
  summarize(Advancer_1_Year = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_1_Year = sum(neg_sig_1_years == 1, na.rm=TRUE), 
            Advancer_4_Year = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_4_Year = sum(neg_sig_4_years == 1, na.rm=TRUE),
            Advancer_5_Year = sum(pos_sig_5_years == 1, na.rm=TRUE),
            Decliner_5_Year = sum(neg_sig_5_years == 1, na.rm=TRUE),
            Advancer_10_Year = sum(pos_sig_10_years == 1, na.rm=TRUE),
            Decliner_10_Year = sum(neg_sig_10_years == 1, na.rm=TRUE),
            Advancer_20_Year = sum(pos_sig_20_years == 1, na.rm=TRUE),
            Decliner_20_Year = sum(neg_sig_20_years == 1, na.rm=TRUE),
            Advancer_42_Year = sum(pos_sig_42_years == 1, na.rm=TRUE),
            Decliner_42_Year = sum(neg_sig_42_years == 1, na.rm=TRUE))

#write_excel_csv(advancer_decliner_summary_by_region, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner All Timespan By Region - 2019 V5.csv"))
write_xlsx(advancer_decliner_summary_by_region, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner All Timespan By Region - 2019 V5.xlsx"))



#### Summary sig declines by Region

advancer_decliner_summary <- gsodi_long_sig_change %>% 
  group_by(ID_variable_name, ID_year) %>% 
  summarize(Advancer_1_Year = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_1_Year = sum(neg_sig_1_years == 1, na.rm=TRUE), 
            Advancer_4_Year = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_4_Year = sum(neg_sig_4_years == 1, na.rm=TRUE),
            Advancer_5_Year = sum(pos_sig_5_years == 1, na.rm=TRUE),
            Decliner_5_Year = sum(neg_sig_5_years == 1, na.rm=TRUE),
            Advancer_10_Year = sum(pos_sig_10_years == 1, na.rm=TRUE),
            Decliner_10_Year = sum(neg_sig_10_years == 1, na.rm=TRUE),
            Advancer_20_Year = sum(pos_sig_20_years == 1, na.rm=TRUE),
            Decliner_20_Year = sum(neg_sig_20_years == 1, na.rm=TRUE),
            Advancer_42_Year = sum(pos_sig_42_years == 1, na.rm=TRUE),
            Decliner_42_Year = sum(neg_sig_42_years == 1, na.rm=TRUE))

#write_excel_csv(advancer_decliner_summary_by_region, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner All Timespan Global - 2019 V5.csv"))
write_xlsx(advancer_decliner_summary, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner All Timespan Global - 2019 V5.xlsx"))



#### total number of declines 
sub_atb_advancer_decliner_summary_by_country<- filter(gsodi_long_sig_change, ID_a_sa_sc == 2) %>% 
  group_by(ID_country_name, ID_region_name, ID_subregion_name, ID_year) %>% 
  summarize(Advancer_1_Year_SubAtrb = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_1_Year_SubAtrb = sum(neg_sig_1_years == 1, na.rm=TRUE), 
            Advancer_4_Year_SubAtrb = sum(pos_sig_1_years == 1, na.rm=TRUE),
            Decliner_4_Year_SubAtrb = sum(neg_sig_4_years == 1, na.rm=TRUE),
            Advancer_5_Year_SubAtrb = sum(pos_sig_5_years == 1, na.rm=TRUE),
            Decliner_5_Year_SubAtrb = sum(neg_sig_5_years == 1, na.rm=TRUE),
            Advancer_10_Year_SubAtrb = sum(pos_sig_10_years == 1, na.rm=TRUE),
            Decliner_10_Year_SubAtrb = sum(neg_sig_10_years == 1, na.rm=TRUE),
            Advancer_20_Year_SubAtrb = sum(pos_sig_20_years == 1, na.rm=TRUE),
            Decliner_20_Year_SubAtrb = sum(neg_sig_20_years == 1, na.rm=TRUE),
            Advancer_42_Year_SubAtrb = sum(pos_sig_42_years == 1, na.rm=TRUE),
            Decliner_42_Year_SubAtrb = sum(neg_sig_42_years == 1, na.rm=TRUE))


#write_excel_csv(sub_atb_advancer_decliner_summary_by_country, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner Subattributes by Country - 2019 V5.csv"))
write_xlsx(sub_atb_advancer_decliner_summary_by_country, paste0(getwd(),"/sig_changes_advancer_decliner/Advancer Decliner Subattributes by Country - 2019 V5.xlsx"))


##### Change Sheets
#### Decades of change

decade_regime_breakdown <- filter(gsodi_long, ID_year != 1975) %>%
  ungroup() %>% 
  select(decades, dem_breakdown, dem_transition, ID_country_name) %>% 
  distinct() %>%  
  group_by(decades) %>% 
  summarize(dem_breakdown_sum = sum(dem_breakdown, na.rm =TRUE),
            dem_transition_sum = sum(dem_transition, na.rm = TRUE))

#write_csv(decade_regime_breakdown, paste0(getwd(),"/regime_changes/decade_regime_breakdown - 2019 V5.csv"))
write_xlsx(decade_regime_breakdown, paste0(getwd(),"/regime_changes/decade_regime_breakdown - 2019 V5.xlsx"))


### Regime Class Change by Year

regime_class_change_year <- filter(gsodi_long, ID_year != 1975) %>% 
  ungroup() %>% 
  select(ID_year, dem_breakdown, dem_transition, ID_country_name, regime_change_class) %>%
  distinct() %>% 
  group_by(ID_year) %>% 
  count(regime_change_class) %>% 
  spread(regime_change_class, n)%>% 
  rename(`No Transition Country -- Year` = `<NA>`)%>% 
  mutate_all(~replace(., is.na(.), 0))

write_xlsx(regime_class_change_year, paste0(getwd(),"/regime_changes/Regime Class Change by Year - 2019 V5.xlsx"))



### Regime Class Change by Year and Region

regime_class_change_year_region <- filter(gsodi_long, ID_year != 1975) %>% 
  ungroup() %>% 
  select(ID_year, ID_region_name, dem_breakdown, dem_transition, ID_country_name, regime_change_class) %>%
  distinct() %>% 
  group_by(ID_year, ID_region_name) %>% 
  count(regime_change_class) %>% 
  spread(regime_change_class, n)%>% 
  rename(`No Transition Country -- Year` = `<NA>`)%>% 
  mutate_all(~replace(., is.na(.), 0))

write_xlsx(regime_class_change_year_region, paste0(getwd(),"/regime_changes/Regime Class Change by Year and Region - 2019 V5.xlsx"))




#### Decade Regime Class Change

decade_regime_change_class <- filter(gsodi_long, ID_year != 1975) %>% 
  ungroup() %>% 
  select(ID_year, decades, dem_breakdown, dem_transition, ID_country_name, regime_change_class) %>%
  distinct() %>% 
  group_by(decades) %>% 
  count(regime_change_class) %>% 
  spread(regime_change_class, n)%>% 
  rename(`No Transition Country -- Year` = `<NA>`)

#write_csv(decade_regime_change_class, paste0(getwd(),"/regime_changes/decade_regime_change_class - 2019 V5.csv"))
write_xlsx(decade_regime_change_class, paste0(getwd(),"/regime_changes/decade_regime_change_class - 2019 V5.xlsx"))

#### Decade Regime Class Change Region

decade_regime_change_class_region <- gsodi_long %>% 
  ungroup() %>% 
  select(decades, dem_breakdown, dem_transition, ID_country_name, regime_change_class,ID_region_name,regime_status_change_1_year) %>% 
  filter(!is.na(regime_status_change_1_year)) %>% 
  distinct() %>%  
  group_by(decades, ID_region_name) %>% 
  count(regime_change_class) %>% 
  spread(regime_change_class, n) %>% 
  replace_na(list(`Dem to Hybrid` = 0, 
                  `Dem to Non-Dem` = 0,
                  `Hybrid to Dem`= 0,
                  `Hybrid to Non-Dem`= 0,
                  `Non-Dem to Dem`= 0,
                  `Non-Dem to Hybrid`= 0)) %>% 
  rename(`No Transition Country -- Year` = `<NA>`)

#write_csv(decade_regime_change_class_region, paste0(getwd(), "/regime_changes/decade_regime_change_class_region - 2019 V5.csv"))
write_xlsx(decade_regime_change_class_region, paste0(getwd(),"/regime_changes/decade_regime_change_class_region - 2019 V5.xlsx"))


#### Year of Demoratization 

years_of_democratization <- gsodi_long %>% 
  ungroup() %>% 
  select(ID_country_name, ID_region_name, ID_year,
         regime_status, regime_status_name,regime_status_change_1_year, 
         dem_transition,dem_breakdown,regime_change_class) %>%
  distinct() %>%  
  filter(regime_status_change_1_year != 0, !is.na(regime_status_change_1_year)) %>% 
  group_by(ID_country_name) %>% 
  arrange(ID_year) %>% 
  mutate(last_change = row_number()==n()) %>% 
  mutate(time_to_2017 = ifelse(regime_status_name == "Democracy" & last_change == TRUE, 2018 - ID_year, NA)) %>% 
  filter(time_to_2017 != FALSE)

#write_csv(years_of_democratization, paste0(getwd(),"/regime_changes/years_of_democratization - 2019 V5.csv"))
write_xlsx(years_of_democratization, paste0(getwd(),"/regime_changes/years_of_democratization - 2019 V5.xlsx"))


regime_status_change_total <- gsodi_long %>%
  ungroup() %>% 
  select(ID_country_name, ID_region_name, ID_year, regime_status_change_1_year) %>% 
  filter(!is.na(regime_status_change_1_year)) %>% 
  group_by(ID_country_name) %>% 
  distinct() %>% 
  summarize(total_change = sum(regime_status_change_1_year != 0, na.rm = TRUE))


dem_transitions_dem_breakdown_by_year <-  gsodi_long %>% 
  ungroup() %>% 
  select(ID_country_name, ID_region_name, ID_year, dem_transition, dem_breakdown) %>%
  distinct() %>% 
  group_by(ID_year) %>% 
  summarize(dem_transitions = sum(dem_transition == 1, na.rm = TRUE),
            dem_breakdown = sum(dem_breakdown == 1, na.rm = TRUE))

#write_csv(dem_transitions_dem_breakdown_by_year, paste0(getwd(),"/regime_changes/","dem_transitions_dem_breakdown_by_year - 2019 V5.csv"))
write_xlsx(dem_transitions_dem_breakdown_by_year, paste0(getwd(),"/regime_changes/","dem_transitions_dem_breakdown_by_year - 2019 V5.xlsx"))



dem_transitions_dem_breakdown_total_by_country <-gsodi_long %>%
  ungroup() %>% 
  select(ID_country_name, ID_region_name, ID_year, dem_transition, dem_breakdown) %>%
  distinct() %>% 
  group_by(ID_country_name) %>% 
  summarize(dem_transition = sum(dem_transition, na.rm = TRUE),
            dem_breakdown = sum(dem_breakdown, na.rm = TRUE))

#write_csv(dem_transitions_dem_breakdown_total_by_country, paste0(getwd(),"/regime_changes/","dem_transitions_dem_breakdown_total_by_country - 2019 V5.csv"))
write_xlsx(dem_transitions_dem_breakdown_total_by_country, paste0(getwd(),"/regime_changes/","dem_transitions_dem_breakdown_total_by_country - 2019 V5.xlsx"))



transitions_breakdowns_full <- filter(gsodi_long, dem_transition ==1 | dem_breakdown == 1) %>% 
  ungroup() %>% 
  select(ID_country_name, ID_year, ID_region_name, ID_subregion_name, regime_status_name, dem_transition, dem_breakdown, regime_change_class) %>% 
  distinct()


#write_excel_csv(transitions_breakdowns_full, paste0(getwd(),"/regime_changes/","transitions_breakdowns_full - 2019 V5.csv"))
write_xlsx(transitions_breakdowns_full, paste0(getwd(),"/regime_changes/","transitions_breakdowns_full - 2019 V5.xlsx"))



### Regime status_change 

regime_status_change <-filter(gsodi_long, regime_status_change_1_year != 0) %>% 
  ungroup() %>% 
  select(ID_country_name, ID_year, ID_region_name, ID_subregion_name, regime_status_name, dem_transition, dem_breakdown, regime_change_class) %>% 
  distinct()

#write_excel_csv(regime_status_change, paste0(getwd(),"/regime_changes/","regime_status_change_country - 2019 V5.csv"))
write_xlsx(regime_status_change, paste0(getwd(),"/regime_changes/","regime_status_change_country - 2019 V5.xlsx"))


#### tables performance 

library(janitor)

regime_status_long <-arrange(gsodi_long, desc(value)) %>%
  mutate(perfom_class_var_name = factor(perfom_class_var_name, levels = unique(.$perfom_class_var_name)))

variable_names <- unique(gsodi_long$ID_variable_name)


### Regime Crosstabs

regime_crosstabs <- function(id_variable_name){
  df <- filter(regime_status_long, ID_variable_name == id_variable_name, ID_year == 2018)
  
  tabyl(df, perfom_class_var_name, regime_status_name, show_missing_levels = FALSE) %>% 
    adorn_totals(c("row", "col")) %>%
    adorn_percentages("col") %>%
    adorn_pct_formatting() %>%
    adorn_ns()}
crosstab_list <- lapply(variable_names, regime_crosstabs)
names(crosstab_list) <- substr(variable_names, 0, 31)  

write_xlsx(crosstab_list, path =  paste0(getwd(),"/crosstabs/","Regime by Performance Level - List - - 2019 V5.xlsx")
, col_names = TRUE)

#regime_crosstab_df <- reduce(crosstab_list, bind_rows)
#write_excel_csv(regime_crosstab_df, "Regime by Performance Level - .csv")


#### regime crosstabs_reversed
regime_reversed_crosstabs <- function(id_variable_name){
  df <- filter(regime_status_long, ID_variable_name == id_variable_name, ID_year == 2018)
  tabyl(df,regime_status_name, perfom_class_var_name, show_missing_levels = FALSE) %>% 
    adorn_totals(c("row", "col")) %>%
    adorn_percentages("col") %>%
    adorn_pct_formatting() %>%
    adorn_ns()}

regime_reversed_crosstab_list <- lapply(variable_names, regime_reversed_crosstabs)

names(regime_reversed_crosstab_list) <- substr(variable_names, 0, 31)  

write_xlsx(regime_reversed_crosstab_list, path = paste0(getwd(),"/crosstabs/","Performance Level By Regime - List - 2019 V5.xlsx"), col_names = TRUE)

#regime_reversed_crosstab_df <- reduce(regime_reversed_crosstab_list, bind_rows)
#write_excel_csv(regime_reversed_crosstab_df, "regime_reversed_crosstab_df.csv")

##



##### class one region crosstabs

class_one_region_crosstabs <- function(id_variable_name){ 
  
  df <- filter(regime_status_long, ID_variable_name == id_variable_name, ID_year == 2018)
  
  tabyl(df, perfom_class_var_name, ID_region_name, show_missing_levels = FALSE) %>% 
    adorn_totals(c("row", "col")) %>%
    adorn_percentages("col") %>%
    adorn_pct_formatting() %>%
    adorn_ns()}

class_one_crosstab_list <- lapply(variable_names, class_one_region_crosstabs)
names(class_one_crosstab_list) <- substr(variable_names, 0, 31)  


write_xlsx(class_one_crosstab_list, path = paste0(getwd(),"/crosstabs/","Performance Level by Region - 2019 V5.xlsx"), col_names = TRUE)

#performance_region_crosstab_df <- reduce(class_one_crosstab_list, bind_rows)

#write_excel_csv(performance_region_crosstab_df, "performance_region_crosstab_df.csv")


#### Three way crosstabs

three_way_crosstabs <- function(id_variable_name){ 
  
  df <- filter(regime_status_long, ID_variable_name == id_variable_name, ID_year == 2018)
  
  tabyl(df, var1= regime_status_name, var2 = perfom_class_var_name, var3 = ID_region_name, show_missing_levels = FALSE) %>% 
    adorn_totals("col") %>%
    adorn_percentages("col") %>%
    adorn_pct_formatting() %>%
    adorn_ns()}

three_way_crosstab_list <- lapply(variable_names, three_way_crosstabs)

names(three_way_crosstab_list) <- substr(variable_names, 0, 31)

three_way_crosstab_list_flat <- three_way_crosstab_list %>% 
  map(bind_rows, .id = "ID_Region") 

write_xlsx(three_way_crosstab_list_flat, path = paste0(getwd(),"/crosstabs/","Performance Level by Regime Status and Region - 2019 V5.xlsx"), col_names = TRUE)



#### three_way_crosstabs_revesred 
three_way_crosstabs_regime_cols <- function(id_variable_name){ 
  
  df <- filter(regime_status_long, ID_variable_name == id_variable_name, ID_year == 2018)
  
  tabyl(df, var1= perfom_class_var_name, var2 = regime_status_name, var3 = ID_region_name, show_missing_levels = FALSE) %>% 
    adorn_totals("col") %>%
    adorn_percentages("col") %>%
    adorn_pct_formatting() %>%
    adorn_ns()}

three_way_crosstabs_regime_cols_list <- lapply(variable_names, three_way_crosstabs_regime_cols)

names(three_way_crosstabs_regime_cols_list) <- substr(variable_names, 0, 31)

three_way_crosstabs_regime_cols_list_flat <- three_way_crosstabs_regime_cols_list %>% 
  map(bind_rows, .id = "ID_Region") 


write_xlsx(three_way_crosstabs_regime_cols_list_flat, path = paste0(getwd(),"/crosstabs/","Regime Status and Region by Performance Level GSODI - 2019 V5.xlsx"), col_names = TRUE)



#### Datasheet for regions

scores_2018_long <- filter(gsodi_long, ID_year == 2018) %>% 
  select(ID_region_name, ID_subregion_name, ID_country_name, regime_status_name, ID_year, ID_variable_name, value,
         perfom_class_var_name, below_world_average, above_world_average, above_region_average, below_region_average,
         pos_sig_1_years, neg_sig_1_years, change_1_years, pos_sig_5_years, neg_sig_5_years, change_5_years, ID_variable) %>% 
  arrange(ID_region_name, ID_subregion_name, ID_country_name, ID_variable) 

write_xlsx(scores_2018_long, path = paste0(getwd(),"/region_packet/","gsodi_scores_2018_long - 2019 V5.xlsx"), col_names = TRUE)

scores_2018_wide <- select(scores_2018_long, ID_country_name, ID_variable_name, ID_year, value) %>% 
                           spread(ID_variable_name,value) %>% 
  left_join(., select(scores_2018_long, ID_country_name, ID_region_name, ID_subregion_name)) %>% 
  select(ID_country_name, ID_region_name, ID_subregion_name, unique(scores_2018_long$ID_variable_name)) %>% 
  distinct()

write_xlsx(scores_2018_wide, path = paste0(getwd(),"/region_packet/","gsodi_scores_2018_wide - 2019 V5.xlsx"), col_names = TRUE)


####  year tables
### regime distinct 

relevant_variables <- c("ID_country_code", "ID_country_name",
                        "ID_year", "ID_country_year", "ID_region", 
                        "ID_subregion", "ID_region_name", "ID_subregion_name", "regime_status", "regime_status_name",
                        "decades", "regime_status_change_1_year", 
                        "regime_status_change_4_year", "regime_status_change_5_year", "regime_status_change_10_year", "regime_status_change_20_year")



##### Democritization Analysis
#### pub ready table

df_atrbs <-gsodi_long %>%  select(c("ID_country_code", "ID_country_name",
                                    "ID_year", "ID_country_year", "ID_region",  
                                    "ID_subregion", "ID_region_name", "ID_subregion_name",
                                    "ID_variable_name", "ID_variable",
                                    "perfom_class_var", "regime_status_name")) %>% 
  filter(ID_variable %in% c("A_01", "A_02", "A_03", "A_04")) %>% 
  select(-ID_variable) %>% 
  spread(., ID_variable_name, perfom_class_var)


regime_class_one_variables <- gsodi_long %>% select(c("ID_country_code", "ID_country_name",
                                                      "ID_year", "ID_country_year", "ID_region",  
                                                      "ID_subregion", "ID_region_name", "ID_subregion_name", "regime_status_name",
                                                      "ID_variable_name", "ID_variable", "value",
                                                      "perfom_class_var", "pos_sig_5_years", "neg_sig_5_years")) %>% 
  filter(ID_variable %in% c("A_01", "A_02", "A_03", "A_04")) %>% 
  mutate(five_year_change = ifelse(pos_sig_5_years == 1, "+",
                                   ifelse(neg_sig_5_years == 1, "-", "=")),
         table_var = glue::glue("{perfom_class_var} ({round(value, 2)}) ({five_year_change})")) %>% 
  select(ID_country_name, ID_region_name, ID_subregion_name, ID_variable_name, ID_year, table_var , regime_status_name) %>% 
  spread(ID_variable_name, table_var) %>% 
  select(ID_country_name, ID_year, ID_region_name, ID_subregion_name, regime_status_name, 
         `Representative Government`,`Fundamental Rights`, `Checks on Government`, `Impartial Administration`) %>% 
  arrange(regime_status_name, desc(ID_year,
                                   `Representative Government`,`Fundamental Rights`, `Checks on Government`, `Impartial Administration`), ID_region_name, ID_country_name)

write_xlsx(regime_class_one_variables, path = paste0(getwd(),"/region_packet/","Country Performance Overview by Year - 2019 V5.xlsx"), col_names = TRUE)




regime_class_one_variables_rounded_4 <- gsodi_long %>% select(c("ID_country_code", "ID_country_name",
                                                      "ID_year", "ID_country_year", "ID_region",  
                                                      "ID_subregion", "ID_region_name", "ID_subregion_name", "regime_status_name",
                                                      "ID_variable_name", "ID_variable", "value",
                                                      "perfom_class_var", "pos_sig_5_years", "neg_sig_5_years")) %>% 
  filter(ID_variable %in% c("A_01", "A_02", "A_03", "A_04")) %>% 
  mutate(five_year_change = ifelse(pos_sig_5_years == 1, "+",
                                   ifelse(neg_sig_5_years == 1, "-", "=")),
         table_var = glue::glue("{perfom_class_var} ({round(value, 4)}) ({five_year_change})")) %>% 
  select(ID_country_name, ID_region_name, ID_subregion_name, ID_variable_name, ID_year, table_var , regime_status_name) %>% 
  spread(ID_variable_name, table_var) %>% 
  select(ID_country_name, ID_year, ID_region_name, ID_subregion_name, regime_status_name, 
         `Representative Government`,`Fundamental Rights`, `Checks on Government`, `Impartial Administration`) %>% 
  arrange(regime_status_name, desc(ID_year,
                                   `Representative Government`,`Fundamental Rights`, `Checks on Government`, `Impartial Administration`), ID_region_name, ID_country_name)

write_xlsx(regime_class_one_variables_rounded_4, path = paste0(getwd(),"/region_packet/","Country Performance Overview by Year - Rounded 4 - 2019 V5.xlsx"), col_names = TRUE)




#### Regimes over time

regions <- ungroup(gsodi_long) %>%
  select(ID_country_year, ID_region_name) %>% 
  distinct()

gsodi_regime_v5 <- read_csv("gsodi_regime_classification_shell_v5.csv") %>% 
  inner_join(.,  regions)


### Regime status wide

gsodi_regime_v5_wide <- select(gsodi_regime_v5, ID_country_name, ID_region_name, ID_year, regime_status_name) %>% 
  spread(ID_year, regime_status_name)

write_xlsx(gsodi_regime_v5_wide, path = paste0(getwd(),"/regime_changes/","Country Regimes Overview by Year (1975-2018) - 2019 V5.xlsx"), col_names = TRUE)


### Regime types by year

regime_types_by_year_global <- gsodi_regime_v5 %>%
  group_by(ID_year) %>% 
  count(regime_status_name) %>% 
  filter(!is.na(regime_status_name)) %>% 
  spread(regime_status_name, n) %>% 
  mutate(`Total Countries` = Democracy + `Hybrid Regime` + `Non-Democratic Regime`,
         `% Democracies` = Democracy/`Total Countries`, 
         `% Hybrid Regimes` = `Hybrid Regime`/`Total Countries`,
         `% Non-Democratic Regimes` = `Non-Democratic Regime`/`Total Countries`)

write_xlsx(regime_types_by_year_global, path = paste0(getwd(),"/regime_changes/","% of Regime Types by Year Global- 2019 V5.xlsx"), col_names = TRUE)




regime_types_by_year_region <- gsodi_regime_v5 %>%
  group_by(ID_year, ID_region_name) %>% 
  count(regime_status_name) %>% 
  filter(!is.na(regime_status_name)) %>% 
  spread(regime_status_name, n) %>% 
  mutate(`Total Countries` = Democracy + `Hybrid Regime` + `Non-Democratic Regime`,
         `% Democracies` = Democracy/`Total Countries`, 
         `% Hybrid Regimes` = `Hybrid Regime`/`Total Countries`,
         `% Non-Democratic Regimes` = `Non-Democratic Regime`/`Total Countries`) %>% 
  mutate_all(~replace(., is.na(.), 0))

write_xlsx(regime_types_by_year_region, path = paste0(getwd(),"/regime_changes/","% of Regime Types by Year Region - 2019 V5.xlsx"), col_names = TRUE)


#### Regional % Change 

percent_change <- function(v2, v1){(v2-v1)/v1}

gsodi_regions <- read_csv("gsodi_rank_ci_long_with_regions_v5_2019.csv") %>% 
  filter(!is.na(ID_variable_name))


#### Regions

percentage_change_regions <- gsodi_regions %>%
  filter(ID_country_region_sub == 3) %>% 
  dplyr::group_by(ID_country_name, ID_variable_name) %>%
  dplyr::add_count() %>% 
  dplyr::mutate(row_number = dplyr::row_number(),
                lag_number = ifelse(row_number - 1 == 0, 1, row_number-1),
                value_1975 = value[1],
                value_1985 = value[11],
                value_1995 = value[21],
                value_2005 = value[31],
                percentage_change_1975 = percent_change(value, value_1975),
                percentage_change_1985 = percent_change(value, value_1985),
                percentage_change_1995 = percent_change(value, value_1995),
                percentage_change_2005 = percent_change(value, value_2005)) %>% 
  select(ID_variable_name, ID_country_name, ID_year, 
         value, value_1975, value_1985, value_1995, value_2005,
         percentage_change_1975, percentage_change_1985, percentage_change_1995, percentage_change_2005) %>% 
  filter(ID_year == 2018)

write_xlsx(percentage_change_regions, path = paste0(getwd(),"/percentage_change_regions/","% Score Change in Regions - 2019 V5.xlsx"), col_names = TRUE)

#### Percent change Global 

percentage_change_global<- gsodi_regions %>%
  filter(ID_country_name == "World") %>% 
  dplyr::group_by(ID_country_name, ID_variable_name) %>%
  dplyr::add_count() %>% 
  dplyr::mutate(row_number = dplyr::row_number(),
                lag_number = ifelse(row_number - 1 == 0, 1, row_number-1),
                value_1975 = value[1],
                value_1985 = value[11],
                value_1995 = value[21],
                value_2005 = value[31],
                percentage_change_1975 = percent_change(value, value_1975),
                percentage_change_1985 = percent_change(value, value_1985),
                percentage_change_1995 = percent_change(value, value_1995),
                percentage_change_2005 = percent_change(value, value_2005)) %>% 
  select(ID_variable_name, ID_country_name, ID_year, 
         value, value_1975, value_1985, value_1995, value_2005,
         percentage_change_1975, percentage_change_1985, percentage_change_1995, percentage_change_2005) %>% 
  filter(ID_year == 2018)


write_xlsx(percentage_change_global, path = paste0(getwd(),"/percentage_change_regions/","% Score Change Global - 2019 V5.xlsx"), col_names = TRUE)


#### Percent Change Country


percentage_change_country <- gsodi_long %>% 
  filter(!is.na(ID_variable_name)) %>% 
  dplyr::group_by(ID_country_name, ID_variable_name) %>%
  dplyr::add_count() %>% 
  dplyr::mutate(row_number = dplyr::row_number(),
                lag_number = ifelse(row_number - 1 == 0, 1, row_number-1),
                value_1975 = value[1],
                value_1985 = value[11],
                value_1995 = value[21],
                value_2005 = value[31],
                percentage_change_1975 = percent_change(value, value_1975),
                percentage_change_1985 = percent_change(value, value_1985),
                percentage_change_1995 = percent_change(value, value_1995),
                percentage_change_2005 = percent_change(value, value_2005)) %>% 
  select(ID_variable_name, ID_country_name, ID_year, 
         value, value_1975, value_1985, value_1995, value_2005,
         percentage_change_1975, percentage_change_1985, percentage_change_1995, percentage_change_2005) %>% 
  filter(ID_year == 2018)

write_xlsx(percentage_change_country, path = paste0(getwd(),"/percentage_change_regions/","% Score Change Country - 2019 V5.xlsx"), col_names = TRUE)



#### Ranking data sheets

ranking_sheets <- select(gsodi_long, ID_year, ID_variable_name, ID_variable, ID_country_name, ID_region_name, ID_subregion_name, value, year_rank, top_25_rank, bottom_25_rank) %>% 
  filter(ID_year == 2018) %>% 
  arrange(ID_variable, desc(value))

write_xlsx(ranking_sheets, path = paste0(getwd(),"/Country Rank - 2019 V5.xlsx"), col_names = TRUE)

#### Attribute Class Changes

attribute_class_change <- select(gsodi_long, ID_year, ID_country_name, ID_region_name, ID_subregion_name, ID_variable, ID_variable_name, value,
       change_1_years, sig_1_years, pos_sig_1_years, neg_sig_1_years, 
       change_5_years, sig_5_years, pos_sig_5_years, neg_sig_5_years,
       perfom_class_var) %>% 
  ungroup() %>% 
  group_by(ID_country_name) %>% 
  mutate(perfom_class_var_num = ifelse(perfom_class_var == "High", 3, 
                                       ifelse(perfom_class_var == "Mid-Range", 2,
                                              ifelse(perfom_class_var == "Low", 1, NA))),
         perfom_class_change_1_years = perfom_class_var_num - lag(perfom_class_var_num, 1),
         perfom_class_change_5_years = perfom_class_var_num - lag(perfom_class_var_num, 5), 
  perfom_class_change_name_1_years = ifelse(perfom_class_change_1_years == -2, "High to Low",
                               ifelse(perfom_class_change_1_years == -1 & perfom_class_var_num == 1, "Mid-Range to Low",
                                      ifelse(perfom_class_change_1_years == -1 & perfom_class_var_num == 2, "High to Mid-Range",
                                             ifelse(perfom_class_change_1_years == 1 & perfom_class_var_num == 2, "Low to Mid-Range",
                                                    ifelse(perfom_class_change_1_years == 1 & perfom_class_var_num == 3, "Mid-Range to High",
                                                           ifelse(perfom_class_change_1_years == 2 & perfom_class_var_num == 3, "Low to High", NA)))))),
  perfom_class_change_name_5_years = ifelse(perfom_class_change_5_years == -2, "High to Low",
                                            ifelse(perfom_class_change_5_years == -1 & perfom_class_var_num == 1, "Mid-Range to Low",
                                                   ifelse(perfom_class_change_5_years == -1 & perfom_class_var_num == 2, "High to Mid-Range",
                                                          ifelse(perfom_class_change_5_years == 1 & perfom_class_var_num == 2, "Low to Mid-Range",
                                                                 ifelse(perfom_class_change_5_years == 1 & perfom_class_var_num == 3, "Mid-Range to High",
                                                                        ifelse(perfom_class_change_5_years == 2 & perfom_class_var_num == 3, "Low to High", NA)))))))


attribute_class_change_for_export <- select(attribute_class_change, 
                                            ID_year, ID_country_name, ID_region_name, ID_subregion_name, 
                                            ID_variable_name, perfom_class_var, value, change_1_years, pos_sig_1_years, neg_sig_1_years, perfom_class_change_name_1_years,
                                            change_5_years, pos_sig_5_years, neg_sig_5_years, perfom_class_change_name_5_years) %>% 
  filter(!is.na(perfom_class_change_name_1_years) | !is.na(perfom_class_change_name_5_years))

write_xlsx(attribute_class_change_for_export, path = paste0(getwd(),"/attribute_performance_changes/","Performance Changes by Attribute and Country- 2019 V5.xlsx"), col_names = TRUE)



#### Performance Changes 


attribute_class_change_2018_5_years <- filter(attribute_class_change, perfom_class_change_5_years != 0, ID_year == 2018) %>%  
  group_by(ID_variable_name, ID_variable, ID_year) %>% 
  count(perfom_class_change_name_5_years) %>% 
  spread(perfom_class_change_name_5_years , n) %>% 
  replace_na(list(`High to Mid-Range` = 0, 
                  `High to Low` = 0,
                  `Mid-Range to High`= 0,
                  `Mid-Range to Low`= 0,
                  `Low to High`= 0,
                  `Low to Mid-Range`= 0))

write_xlsx(attribute_class_change_2018_5_years, path = paste0(getwd(),"/attribute_performance_changes/","5 Year Performance Changes by Attribute - 2019 V5.xlsx"), col_names = TRUE)


attribute_class_change_2018_5_years_region <- filter(attribute_class_change, perfom_class_change_5_years != 0, ID_year == 2018) %>%  
  group_by(ID_region_name, ID_variable_name, ID_variable, ID_year) %>% 
  count(perfom_class_change_name_5_years) %>% 
  spread(perfom_class_change_name_5_years , n) %>% 
  replace_na(list(`High to Mid-Range` = 0, 
                  `High to Low` = 0,
                  `Mid-Range to High`= 0,
                  `Mid-Range to Low`= 0,
                  `Low to High`= 0,
                  `Low to Mid-Range`= 0))

write_xlsx(attribute_class_change_2018_5_years_region, path = paste0(getwd(),"/attribute_performance_changes/","5 Year Performance Changes by Attribute and Region - 2019 V5.xlsx"), col_names = TRUE)



attribute_class_change_2018_1_years <- filter(attribute_class_change, perfom_class_change_1_years != 0, ID_year == 2018) %>%  
  group_by(ID_variable_name, ID_variable, ID_year) %>% 
  count(perfom_class_change_name_1_years) %>% 
  spread(perfom_class_change_name_1_years , n) %>% 
  replace_na(list(`High to Mid-Range` = 0, 
                  `High to Low` = 0,
                  `Mid-Range to High`= 0,
                  `Mid-Range to Low`= 0,
                  `Low to High`= 0,
                  `Low to Mid-Range`= 0))

write_xlsx(attribute_class_change_2018_1_years, path = paste0(getwd(),"/attribute_performance_changes/","1 Year Performance Changes by Attribute - 2019 V5.xlsx"), col_names = TRUE)



attribute_class_change_2018_1_years_region <- filter(attribute_class_change, perfom_class_change_1_years != 0, ID_year == 2018) %>%  
  group_by(ID_variable_name, ID_variable, ID_year) %>% 
  count(perfom_class_change_name_1_years) %>% 
  spread(perfom_class_change_name_1_years , n) %>% 
  replace_na(list(`High to Mid-Range` = 0, 
                  `High to Low` = 0,
                  `Mid-Range to High`= 0,
                  `Mid-Range to Low`= 0,
                  `Low to High`= 0,
                  `Low to Mid-Range`= 0))

write_xlsx(attribute_class_change_2018_1_years_region, path = paste0(getwd(),"/attribute_performance_changes/","1 Year Performance Changes by Attribute and Region - 2019 V5.xlsx"), col_names = TRUE)

##### 


sig_changes_by_performance_class <- filter(attribute_class_change, !is.na(perfom_class_var)) %>% 
  mutate(perform_class_name_5_years = lag(perfom_class_var, 5)) %>% 
  group_by(ID_year, ID_variable_name, perform_class_name_5_years, perfom_class_var) %>% 
  summarize(`5 Year Advancers` = sum(pos_sig_5_years, na.rm =TRUE),
            `5 Year Decliners` = sum(neg_sig_5_years, na.rm = TRUE)) %>% 
  rename(`Performance Class 5 Years Previous` = perform_class_name_5_years,
         `Performance Class Current` = perfom_class_var) %>% 
  filter(ID_year > 1979)
  

write_xlsx(sig_changes_by_performance_class, path = paste0(getwd(),"/attribute_performance_changes/","5 Year Significant Changes by Performance Class- 2019 V5.xlsx"), col_names = TRUE)


### Rounding Check

filter(gsodi_long, ID_year == 2018, ID_a_sa_sc == 1, (value > .395 & value <= .399999999999999999999999999) | (value > .695 & value <= .699999999999999999999999)) %>% 
  select(ID_country_name, ID_variable_name, value, perfom_class_var) %>% 
  arrange(value)
attribute_class_change

#### SDG Changes 

sdg_changes_3_years <- gsodi_long %>% 
  mutate(change_3_years = value - lag(value, n = 3),
         sig_3_years = ifelse(lag(upper_value, n = 3)< (lower_value) & lag(upper_value, n = 3) < upper_value|
                                lag(upper_value, n = 3) > lower_value & lag(lower_value, n = 3) > upper_value, 1, 0),
         pos_sig_3_years = ifelse(sig_3_years == 1 & change_3_years>0, 1, 0),
         neg_sig_3_years = ifelse(sig_3_years == 1 & change_3_years < 0, 1, 0),
    change_3_years_pos = ifelse(change_3_years > .10 & is.na(sig_3_years), 1, 0),
         change_3_years_neg = ifelse(change_3_years < -.10 & is.na(sig_3_years), 1, 0),
         change_5_years_pos = ifelse(change_5_years > .10 & is.na(sig_5_years), 1, 0),
         change_5_years_neg = ifelse(change_5_years < -.10 & is.na(sig_5_years), 1, 0))%>% 
  mutate(positive_3_years = ifelse(change_3_years_pos == 1 |pos_sig_3_years == 1, 1, 0),
         negative_3_years= ifelse(change_3_years_neg == 1 |neg_sig_3_years == 1, 1, 0)) %>% 
  select(ID_year, ID_country_name, ID_region_name, ID_variable,
         ID_variable_name, value, 
         change_3_years, 
         sig_3_years, 
         positive_3_years,
         negative_3_years)


global_sdg_countries <- filter(sdg_changes_3_years, sig_3_years == 1, ID_year == 2018)


global_sdg_development <- filter(sdg_changes_3_years, positive_3_years == 1, ID_year == 2018) %>% 
  group_by(ID_variable_name, ID_variable) %>% 
  count(name = "Advancers 2015-2018") %>% 
  left_join(., filter(sdg_changes_3_years, negative_3_years == 1, ID_year == 2018) %>% 
              group_by(ID_variable_name) %>% 
              count(name = "Decliners 2015-2018")) %>% 
  arrange(ID_variable) %>% 
  mutate_all(~replace(., is.na(.), 0)) 


global_sdg_development_region <- filter(sdg_changes_3_years, positive_3_years == 1, ID_year == 2018) %>% 
  group_by(ID_variable_name, ID_variable, ID_region_name) %>% 
  count(name = "Advancers 2015-2018") %>% 
  left_join(., filter(sdg_changes_3_years, negative_3_years == 1, ID_year == 2018) %>% 
              group_by(ID_variable_name, ID_region_name) %>% 
              count(name = "Decliners 2015-2018")) %>% 
  arrange(ID_variable) %>%  
  mutate_all(~replace(., is.na(.), 0)) 


################# 

global_sdg_spreadsheet <- list(global_sdg_countries, 
                               global_sdg_development, 
                               global_sdg_development_region)
names(global_sdg_spreadsheet) <- c("SDG Country Changes 2013-2018",
                                        "aspect country changes",
                                        "aspect region country changes")

write_xlsx(global_sdg_spreadsheet, path = paste0(getwd(),"/SDG - Analysis - 2019 V5.xlsx"), col_names = TRUE)




