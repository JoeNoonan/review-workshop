group_by(ID_year, ID_region_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
avg_score_region_regime_df <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
avg_score_region_regime_df
unique(avg_score_region_regime_df$ID_region_name)
filter(avg_score_region_regime_df, ID_year == 2018, ID_region_name == "Asia and the Pacific")
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
nrow(lac_dem_patterns_2018_summarized)
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
gsodi_a_05c_count_2018
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
gsodi_a_05c_count_2018_percent <- left_join(gsodi_a_05c_count_2018,region_country_count) %>%
mutate(A_05c_count_percent = A_05c_count/num_countries)
ggplot(data=gsodi_a_05c_count_2018_percent,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
avg_score_region_regime_df <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
avg_score_region_regime_df
a_p_abs_corrp_avg_score_df<- filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
a_p_abs_corrp_avg_score_df
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
a_p_abs_corrp_avg_score_df
avg_score_region_regime_df
a_p_abs_corrp_avg_score_2018_df<- filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
avg_score_region_regime_df
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year == 1990:2018)
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018)
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018, ID_region_name == "Asia and the Pacific")
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
ap_abs_corrp_1990_2018 <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
ap_abs_corrp_1990_2018
ap_abs_corrp_1990_2018 <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption",
!is.na(regime_status_name))
ap_abs_corrp_1990_2018
ggplot(ap_abs_corrp_1990_2018, x = ID_year, y = avg_score, fill = regime_status_name)+
geom_line()
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name))+
geom_line()
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line() +
theme_minimal()
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line(size = 3) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
gsodi_dem_patterns
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
count(dem_perf_pattern, name = "num_countries")
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
# Example of count used with filter
filter(gsodi_dem_patterns, ID_region_name == "Africa") %>%
count(ID_country_name, name = "name_countries")
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)  %>%
count(high_atrbs, name = "count_countries")
filter(gsodi_dem_patterns, ID_region_name == "Africa") %>%
count(ID_country_name, name = "name_countries")
filter(gsodi_dem_patterns, high_atrbs == 5) %>%
group_by(ID_year) %>%
count(high_atrbs, name = "count_countries")
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
n = n(),
count_countries = sum(high_atrbs == 5)
)
gsodi_dem_patterns %>%
group_by(ID_year) %>%
summarise(
n = n(),
count_countries = sum(high_atrbs == 5)
)
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
n = n(),
count_countries = sum(high_atrbs == 5)
)
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
count_countries = n())
- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line(size = 3) +
theme_minimal()
filter(gsodi_dem_patterns, ID_region_name == "Africa") %>%
count(ID_country_name, name = "name_countries")
library(tidyverse)
###
### Review
###
gsodi_long <- read_csv("gsodi_long.csv")
dem_pattern_counts_by_region <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
### Why is this more elegant?
dem_pattern_counts_by_region
gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(A_05c,
name = "A_05c_count")
gsodi_dem_patterns <- read_csv("gsodi_dem_patterns.csv")
# ASSIGNMENT: Explore this new dataset. What do you notice about how the data is organized?
# Find the names of all the variables, the number of observations (rows), and columns
# ASSIGNMENT: Which countries scored high on all five attributes in 1975?
# Use variable high_atrbs
# Filter
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)
# ASSIGNMENT: Count (using R!) the number of countries that hiave high_atrbs on all five indices in 1975
# Using the count() function which simply counts the number of observations
# Example of count
# Count the number of countries in the dataset
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
# count(x = dataframe, variables to group by, name of count variable)
# REMEMBER, use ?count() to find out more information in the help file.
# Example of count used with filter
filter(gsodi_dem_patterns, ID_region_name == "Africa") %>%
count(ID_country_name, name = "name_countries")
# Solution
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)  %>%
count(high_atrbs, name = "count_countries")
# ASSIGNMENT: Create a data frame that has the number of high attribute countries, by year, from 1975-2018
# Hint: use group_by()
filter(gsodi_dem_patterns, high_atrbs == 5) %>%
group_by(ID_year) %>%
count(high_atrbs, name = "count_countries")
# Alternative
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
count_countries = n())
#ASSIGNMENT: How many different combinations of democratic performance levels exist in LAC in 2018?
# What is the most common democratic combination?
# Use **some/all** of functions count(), group_by(), filter(), summarize(), group_by()
# to find out the number of unique dem performance levels in LAC in 2018
# Multiple ways to solve!
# Solution 1: First filtering for LAC
filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean" ) %>%
count(dem_perf_pattern, name = "num_countries")
# More countries than in LAC, why?
# Did not filter for year!
filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
count(dem_perf_pattern, name = "num_countries")
# Arrange to make more digesitble and save as an object.
lac_dem_patterns_2018_summarized <- filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
count(dem_perf_pattern, name = "num_countries") %>%
arrange(desc(num_countries))
# What is the unique number of democracy patterns in LAC?
# Two ways of identifying.
# Since count() only looks at unique cases to count, we can just look at the number of rows in the df
nrow(lac_dem_patterns_2018_summarized)
# Alternativly using the unique() function
lac_2018_df <- filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018)
unique(lac_2018_df$dem_perf_pattern)
### Solution 2: More elegant solution to looking at # of patterns by region
dem_pattern_counts_by_region <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
### Why is this more elegant?
### More advanced, adding percentage of region to dataframe.
# Make table to find country count per region (ignoring perf patterns)
region_country_count <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(ID_region_name,
name = "num_countries")
# Join tables together and mutate a new variable called "percent_pattern"
dem_pattern_counts_by_region_percent <- left_join(region_country_count, dem_pattern_counts_by_region) %>%
mutate(percent_pattern = pattern_count/num_countries)
filter(dem_pattern_counts_by_region_percent,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
arrange(desc(percent_pattern))
#ASSIGNMENT:
# How many countries performed low, mid-range and high on Participatory Engagement per region in 2018?
# Use variable A_05c
# How would you visualize this data?
# Solution
gsodi_a_05c_count <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(A_05c,
name = "A_05c_count")
gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(A_05c,
name = "A_05c_count")
gsodi_a_05c_count_2018 <- filter(gsodi_a_05c_count, ID_year == 2018)
gsodi_a_05c_count_2018
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption"
)
avg_score_region_regime_df <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
# Filter to find final scores
a_p_abs_corrp_avg_score_2018_df<- filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
a_p_abs_corrp_avg_score_2018_df
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
a_p_abs_corrp_avg_score_2018_df<- filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
### Visualization ideas
## Bar graph
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_2018_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
ggplot(ap_abs_corrp_1990_2018,
aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line(size = 3) +
theme_minimal()
ap_abs_corrp_1990_2018 <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption",
!is.na(regime_status_name))
ggplot(ap_abs_corrp_1990_2018,
aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line(size = 3) +
theme_minimal()
avg_score_region_regime_df
regional_value_mutate_df
regional_value_mutate_df <- gsodi_long %>%
group_by(ID_year, ID_variable_name, ID_region_name) %>% # Perform next operations by year, variable and region
mutate(regional_value_joe = mean(value, na.rm = TRUE))%>%  # mean is the function for average
select(ID_year, ID_year, ID_country_name, ID_region_name, ID_variable_name,
value, regional_value_joe, region_value)
regional_value_mutate_df
regional_value_mutate_df <- gsodi_long %>%
group_by(ID_year, ID_variable_name, ID_region_name) %>% # Perform next operations by year, variable and region
mutate(regional_value_joe = mean(value, na.rm = TRUE))%>%  # mean is the function for average
select(ID_year, ID_year, ID_country_name, ID_region_name, ID_variable_name,
value, regional_value_joe, region_value)
regional_value_mutate_df
gsodi_long
names(gsodi_long)
gsodi_long %>%
select(ID_year, ID_variable_name, ID_region_name, region_value, region_lower_value, region_upper_value) %>%
distinct()
filter(regional_value_df, ID_year %in% (1975, 2018))
filter(regional_value_df, ID_year %in% c(1975, 2018))
regional_value_df <- gsodi_long %>%
select(ID_year, ID_variable_name, ID_region_name, region_value, region_lower_value, region_upper_value) %>% # Select relevant variables
distinct() # Remove duplicates
filter(regional_value_df, ID_year %in% c(1975, 2018))
filter(regional_value_df, ID_year %in% c(1975, 2018)) %>%
group_by(ID_variable_name, ID_region_name) %>%
mutate(score_change_1975_2018 = region_value - lag(region_value, 1))
View(
filter(regional_value_df, ID_year %in% c(1975, 2018)) %>%
group_by(ID_variable_name, ID_region_name) %>%
mutate(score_change_1975_2018 = region_value - lag(region_value, 1)))
filter(regional_value_df, ID_year %in% c(1975, 2018)) %>%
group_by(ID_variable_name, ID_region_name) %>%
mutate(score_change_1975_2018 = region_value - lag(region_value, 1)) %>%
filter(ID_year == 2018)
regional_value_1975_2018_df <- filter(regional_value_df, ID_year %in% c(1975, 2018)) %>%
group_by(ID_variable_name, ID_region_name) %>%
mutate(score_change_1975_2018 = region_value - lag(region_value, 1))
regional_value_1975_2018_df
View(regional_value_1975_2018_df)
filter(regional_value_1975_2018_df,
ID_variable_name == "Gender Equality",
ID_year == 2018)
names(gsodi_long)
filter(regional_value_1975_2018_df,
ID_variable_name == "Gender Equality",
ID_year == 2018)
gsodi_long
View(filter(regional_value_1975_2018_df,
ID_variable_name == "Gender Equality",
ID_year == 2018))
names(gsodi_long)
names(gsodi_long)
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
filter(gsodi_long, ID_variable_name == "Representative Government", ID_year == 2018) %>% # Filter out critera
tabyl(var1= perfom_class_var_name, show_missing_levels = FALSE)
library(janitor)
filter(gsodi_long, ID_variable_name == "Representative Government", ID_year == 2018) %>% # Filter out critera
tabyl(var1= perfom_class_var_name, show_missing_levels = FALSE)
filter(gsodi_long, ID_variable_name == "Representative Government", ID_year == 2018) %>% # Filter out critera
tabyl(var1= perfom_class_var_name, show_missing_levels = FALSE) %>%
adorn_pct_formatting()
filter(gsodi_long, ID_variable_name == "Representative Government", ID_year == 2018) %>% # Filter out critera
tabyl(var1 = perfom_class_var_name, var2 = regime_status_name, show_missing_levels = FALSE) %>%
adorn_totals(c("row", "col")) %>% # adds total column to the rows and collumns
adorn_percentages("col") %>% # adds percentages for the columns
adorn_pct_formatting() %>% # adds percentage formating
adorn_ns() # adds ns
names(gsodi_long)
filter(gsodi_long, ID_region_name == "Afirca", ID_year == 2018) %>% # Filter out critera
tabyl(var1= regime_status_name, show_missing_levels = FALSE)
filter(gsodi_long, ID_region_name == "Afirca", ID_year == 2018
filter(gsodi_long, ID_region_name == "Afirca", ID_year == 2018)
filter(gsodi_long, ID_region_name == "Afirca", ID_year == 2018)
filter(gsodi_long, ID_region_name == "Africa", ID_year == 2018) %>% # Filter out critera
tabyl(var1= regime_status_name, show_missing_levels = FALSE)
filter(gsodi_dem_patterns, ID_region_name == "Africa", ID_year == 2018) %>% # Filter out critera
tabyl(var1= regime_status_name, show_missing_levels = FALSE)
gsodi_dem_patterns
names()
names(gsodi_dem_patterns)
filter(gsodi_dem_patterns, ID_region_name == "Africa", ID_year == 2018) %>% # Filter out critera
tabyl(var1= dem, show_missing_levels = FALSE)
gsodi_dem_patterns  %>% # Filter out critera
tabyl(var1 = dem, var2 = low_atrbs, show_missing_levels = FALSE) %>%
adorn_totals(c("row", "col")) %>% # adds total column to the rows and collumns
adorn_percentages("col") %>% # adds percentages for the columns
adorn_pct_formatting() %>% # adds percentage formating
adorn_ns() # adds ns
filter(gsodi_dem_patterns, ID_year == 2018)  %>% # Filter out critera
tabyl(var1 = dem, var2 = low_atrbs, show_missing_levels = FALSE) %>%
adorn_totals(c("row", "col")) %>% # adds total column to the rows and collumns
adorn_percentages("col") %>% # adds percentages for the columns
adorn_pct_formatting() %>% # adds percentage formating
adorn_ns() # adds ns
filter(gsodi_dem_patterns, ID_year == 2018)  %>% # Filter out critera
tabyl(var1 = dem, var2 = low_atrbs, show_missing_levels = FALSE) %>%
adorn_totals(c("row", "col")) %>% # adds total column to the rows and collumns
adorn_percentages("row") %>% # adds percentages for the columns
adorn_pct_formatting() %>% # adds percentage formating
adorn_ns() # adds ns
filter(gsodi_dem_patterns, ID_year == 2018)  %>% # Filter out critera
tabyl(var1 = low_atrbs , var2 =dem , show_missing_levels = FALSE) %>%
adorn_totals(c("row", "col")) %>% # adds total column to the rows and collumns
adorn_percentages("col") %>% # adds percentages for the columns
adorn_pct_formatting() %>% # adds percentage formating
adorn_ns() # adds ns
filter(gsodi_long, ID_variable %in% c("Civil Society Participation", "Media Integrity","Civil Liberties")
filter(gsodi_long, ID_variable %in% c("Civil Society Participation", "Media Integrity","Civil Liberties"))
filter(gsodi_long, ID_variable %in% c("Civil Society Participation", "Media Integrity","Civil Liberties"))
filter(gsodi_long, ID_variable_name %in% c("Civil Society Participation", "Media Integrity","Civil Liberties"))
filter(gsodi_long, ID_variable_name %in% c("Civil Society Participation", "Media Integrity","Civil Liberties")) %>%
group_by(ID_region_name, ID_variable_name, ID_year) %>%
summarize(sum(neg_sig_5_years))
filter(gsodi_long, ID_variable_name %in% c("Civil Society Participation", "Media Integrity","Civil Liberties")) %>%
group_by(ID_region_name, ID_variable_name, ID_year) %>%
summarize(num_countries_neg_sig_5_years == sum(neg_sig_5_years))
filter(gsodi_long, ID_variable_name %in% c("Civil Society Participation", "Media Integrity","Civil Liberties")) %>%
group_by(ID_region_name, ID_variable_name, ID_year) %>%
summarize(num_countries_neg_sig_5_years = sum(neg_sig_5_years))
filter(gsodi_long, ID_variable_name %in% c("Civil Society Participation", "Media Integrity","Civil Liberties")) %>%
group_by(ID_region_name, ID_variable_name, ID_year) %>%
summarize(num_countries_neg_sig_5_years = sum(neg_sig_5_years)) %>%
filter(ID_year == 2018)
sig_declines_5_years_civic_space_2018 <- filter(gsodi_long, ID_variable_name %in% c("Civil Society Participation", "Media Integrity","Civil Liberties")) %>%
group_by(ID_region_name, ID_variable_name, ID_year) %>%
summarize(num_countries_neg_sig_5_years = sum(neg_sig_5_years)) %>%
filter(ID_year == 2018)
ggplot(data=sig_declines_5_years_civic_space_2018,
aes(x=ID_region_name,
y=num_countries_neg_sig_5_years,
fill = ID_variable_name)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
filter(gsodi_long, ID_variable_name == "Electoral Participation")
filter(gsodi_long, ID_variable_name == "Electoral Participation") %>%
mutate(electoral_part_50 = ifelse(value > .50, 1, 0))
elect_part_df <- filter(gsodi_long, ID_variable_name == "Electoral Participation") %>%
mutate(electoral_part_50 = ifelse(value > .50, 1, 0))
elect_part_df <- filter(gsodi_long, ID_variable_name == "Electoral Participation") %>%
mutate(electoral_part_50 = ifelse(value > .50, 1, 0)) # ifelse() returns a value if a condition is met. In this case if value is over .50 then 1 for everything else 0.
elect_part_df %>%
group_by(ID_year, ID_region_name)
summarize(sum(electoral_part_50))
elect_part_df <- filter(gsodi_long, ID_variable_name == "Electoral Participation") %>%
mutate(electoral_part_50 = ifelse(value > .50, 1, 0)) # ifelse() returns a value if a condition is met. In this case if value is over .50 then 1 for everything else 0.
### How would you take this and summarize it by region?
elect_part_df %>%
group_by(ID_year, ID_region_name)
summarize(sum(electoral_part_50))
names(elect_part_df)
elect_part_df %>%
group_by(ID_year, ID_region_name)
summarize(sum(elect_per_50))
elect_part_df <- filter(gsodi_long, ID_variable_name == "Electoral Participation") %>%
mutate(elect_per_50 = ifelse(value > .50, 1, 0)) # ifelse() returns a value if a condition is met. In this case if value is over .50 then 1 for everything else 0.
### How would you take this and summarize it by region?
elect_part_df %>%
group_by(ID_year, ID_region_name)
summarize(sum(elect_per_50))
elect_part_df %>%
group_by(ID_year, ID_region_name) %>%
summarize(sum(elect_per_50))
elect_part_df %>%
group_by(ID_year, ID_region_name) %>%
summarize(sum(elect_per_50, na.rm = TRUE))
elect_part_df %>%
group_by(ID_year, ID_region_name) %>%
summarize(sum(elect_per_50, na.rm = TRUE))
