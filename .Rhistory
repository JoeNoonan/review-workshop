library(tidyverse)
###
### Review
###
gsodi_long <- read_csv("gsodi_long.csv")
### Exploring the dataframe
### Find all of the variable names
names(gsodi_long)
### Look at the data like in Excel
View(gsodi_long)
### Summary of the dataframe (more complex)
str(gsodi_long)
### Dimensions of dataframe (rows by columns)
dim(gsodi_long)
### Top of the dataframe
head(gsodi_long)
### Bottom of the data frame
tail(gsodi_long)
### Filtering and Selecting
### Works the same as in excel but you type it out!
filter(.data = gsodi_long, ID_year == 2018)
filter(gsodi_long, ID_year == 2018, ID_country_name == "Honduras")
filter(gsodi_long, ID_year == 2018 & neg_sig_10_years == 1  | ID_year == 2018 & neg_sig_5_years == 1)
filter(gsodi_long,
ID_variable_name == "Representative Government",
ID_year < 2000 & ID_year >= 1990,
value >= 0.50,
neg_sig_5_years == 1)
### Selecting
# What do you actually need to look at?
select(gsodi_long, value)
# Selecting allows you to select variables.
select(gsodi_long, ID_year, ID_country_name, ID_region_name, ID_variable_name, value)
select(gsodi_long, ID_year, ID_country_name, ID_region_name, ID_variable_name, value, regime_status_name)
### The pipe function
# The pipe %>% (shft-ctrl-m)
# What the pipe does is it takes the output of the function on the
# left and feeds it to the right function as its first argument.
# Or in english "do this and then this"
# Filter and then select
filter(gsodi_long, ID_year == 2018, ID_country_name == "Honduras") %>% # Do this...
select(ID_year, ID_year, ID_country_name, ID_region_name, ID_variable_name, value) # then this.
# Transforming variables in dplyr
# Making new variables! through mutate()
# mutate() works like this mutate(df, new_variable = (operation for new variable))
gsodi_long %>%
mutate(above_index = above_world_average + above_region_average) %>%  # Create the new variable, in this case just adding some flags for if a country is above or below the global average
select(ID_year, ID_year, ID_country_name, ID_region_name, ID_variable_name,
value, above_index, above_world_average, above_region_average) %>% # Select relevant variables
arrange(desc(above_index)) # Arrange by new variable above_index
# IMPORTANT! group_by function
# This is how you would create for regional averages
regional_value_mutate_df <- gsodi_long %>%
group_by(ID_year, ID_variable_name, ID_region_name) %>% # Perform next operations by year, variable and region
mutate(regional_value_joe = mean(value, na.rm = TRUE))%>%  # mean is the function for average
select(ID_year, ID_year, ID_country_name, ID_region_name, ID_variable_name,
value, regional_value_joe, region_value)
filter(regional_value_mutate_df, ID_year == 2018,
ID_region_name == "Europe",
ID_variable_name == "Clean Elections")
# We used group_by(ID_year,ID_variable_name, ID_region_name)
# Summarize data
# Like mutate but collapses or distills the output of the group
# Compare the summarized operation with the mutated operation
regional_value_summarize_df<- gsodi_long %>%
group_by(ID_year, ID_variable_name, ID_region_name) %>% # Perform next operations by year, variable and region
summarize(regional_value_joe = mean(value, na.rm = TRUE))
# What is the difference between these two data frames?
regional_value_summarize_df
regional_value_mutate_df
# Both mutate and summarize can make multiple new variable .
gsodi_long %>%
group_by(ID_year, ID_variable_name, ID_region_name) %>% # Perform next operations by year, variable and region
summarize(regional_value_joe = mean(value, na.rm = TRUE),
regional_min = min(value, na.rm = TRUE),
regional_max = max(value, na.rm = TRUE))
###
### Democratic Performance Patterns Analysis
###
###
# For the democratic performance patterns analysis we use a different datasheet from the usual "long" gsodi
# dataset.
#
# This is because the unit of measurment wouldn't work on the other dataframe where we are looking at
# Country-Variable-Year cases.
###
gsodi_dem_patterns <- read_csv("gsodi_dem_patterns.csv")
# ASSIGNMENT: Explore this new dataset. What do you notice about how the data is organized?
#(go over together)
#ASSIGNMENT: How many different combinations of democratic performance levels exist in LAC in 2018?
# What is the most common democratic combination?
# Using the count() function which simply counts the number of observations
# Example of count
# Count the number of countries in the dataset
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
# count(x = dataframe, variables to group by, name of count variable)
# Use **some/all** of functions count(), group_by(), filter(), summarize(), group_by()
# to find out the number of unique dem performance levels in LAC in 2018
# Multiple ways to solve!
# Solution 1: First filtering for LAC
filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean" ) %>%
count(dem_perf_pattern, name = "num_countries")
# More countries than in LAC, why?
# Did not filter for year!
filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
count(dem_perf_pattern, name = "num_countries")
# Arrange to make more digesitble and save as an object.
lac_dem_patterns_2018_summarized <- filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
count(dem_perf_pattern, name = "num_countries") %>%
arrange(desc(num_countries))
# What is the unique number of democracy patterns in LAC?
# Two ways of identifying.
# Since count() only looks at unique cases to count, we can just look at the number of rows in the df
nrow(lac_dem_patterns_2018_summarized)
# Alternativly using the unique() function
lac_2018_df <- filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018)
unique(lac_2018_df$dem_perf_pattern)
### Solution 2: More elegant solution to looking at # of patterns by region
dem_pattern_counts_by_region <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
### Why is this more elegant?
### More advanced, adding percentage of region to dataframe.
# Make table to find country count per region (ignoring perf patterns)
region_country_count <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(ID_region_name,
name = "num_countries")
# Join tables together and mutate a new variable called "percent_pattern"
dem_pattern_counts_by_region_percent <- left_join(region_country_count, dem_pattern_counts_by_region) %>%
mutate(percent_pattern = pattern_count/num_countries)
filter(dem_pattern_counts_by_region_percent,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
arrange(desc(percent_pattern))
gsodi_a_05c_count <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(A_05c,
name = "A_05c_count")
gsodi_a_05c_count
.libPaths()
help(.libPaths)
.libPaths()
gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(A_05c,
name = "A_05c_count")
gsodi_a_05c_count <- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(A_05c,
name = "A_05c_count")
filter(gsodi_a_05c_count, ID_year == 2018)
gsodi_a_05c_count_2018 <- filter(gsodi_a_05c_count, ID_year == 2018)
ggplot(data=gsodi_a_05c_count_2018, aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity")
ggplot(data=gsodi_a_05c_count_2018, aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
gsodi_a_05c_count_2018
left_join(region_country_count, gsodi_a_05c_count_2018) %>%
mutate(A_05c_count_percent = A_05c_count/num_countries)
gsodi_a_05c_count_2018_percent <- left_join(gsodi_a_05c_count_2018,region_country_count) %>%
mutate(A_05c_count_percent = A_05c_count/num_countries)
gsodi_a_05c_count_2018_percent
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=gsodi_a_05c_count_2018_percent,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=gsodi_a_05c_count_2018_percent,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_text(aes(label=len), vjust=1.6, color="white",
position = position_dodge(0.9), size=3.5)+
scale_fill_brewer(palette="Paired")+
theme_minimal()
ggplot(data=gsodi_a_05c_count_2018_percent,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_text(aes(label=A_05c_count_percent), vjust=1.6, color="white",
position = position_dodge(0.9), size=3.5)+
scale_fill_brewer(palette="Paired")+
theme_minimal()
ggplot(data=gsodi_a_05c_count_2018_percent,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
names(gsodi_long)
gsodi_long %>%
group_by(ID_year, ID_region_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
avg_score_region_regime_df <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
avg_score_region_regime_df
unique(avg_score_region_regime_df$ID_region_name)
filter(avg_score_region_regime_df, ID_year == 2018, ID_region_name == "Asia and the Pacific")
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
nrow(lac_dem_patterns_2018_summarized)
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
gsodi_a_05c_count_2018
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)
ggplot(data=gsodi_a_05c_count_2018,
aes(x=ID_region_name,
y=A_05c_count,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
gsodi_a_05c_count_2018_percent <- left_join(gsodi_a_05c_count_2018,region_country_count) %>%
mutate(A_05c_count_percent = A_05c_count/num_countries)
ggplot(data=gsodi_a_05c_count_2018_percent,
aes(x=ID_region_name,
y=A_05c_count_percent,
fill = A_05c)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
avg_score_region_regime_df <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE))
filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
avg_score_region_regime_df
a_p_abs_corrp_avg_score_df<- filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
a_p_abs_corrp_avg_score_df
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
a_p_abs_corrp_avg_score_df
avg_score_region_regime_df
a_p_abs_corrp_avg_score_2018_df<- filter(avg_score_region_regime_df, ID_year == 2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
avg_score_region_regime_df
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year == 1990:2018)
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018)
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018, ID_region_name == "Asia and the Pacific")
gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
ap_abs_corrp_1990_2018 <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption")
ap_abs_corrp_1990_2018
ap_abs_corrp_1990_2018 <- gsodi_long %>%
group_by(ID_year, ID_region_name, ID_variable_name, regime_status_name) %>%
summarize(avg_score = mean(value, na.rm = TRUE)) %>%
filter(ID_year %in% 1990:2018,
ID_region_name == "Asia and the Pacific",
ID_variable_name == "Absence of Corruption",
!is.na(regime_status_name))
ap_abs_corrp_1990_2018
ggplot(ap_abs_corrp_1990_2018, x = ID_year, y = avg_score, fill = regime_status_name)+
geom_line()
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name))+
geom_line()
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line() +
theme_minimal()
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line(size = 3) +
theme_minimal()
ggplot(data=a_p_abs_corrp_avg_score_df,
aes(x=regime_status_name,
y=avg_score)) +
geom_bar(stat="identity") +
theme_minimal()
gsodi_dem_patterns
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
filter(gsodi_dem_patterns,
ID_region_name == "Latin America and the Caribbean",
ID_year == 2018) %>%
count(dem_perf_pattern, name = "num_countries")
count(gsodi_dem_patterns, ID_country_name, name = "num_countries")
# Example of count used with filter
filter(gsodi_dem_patterns, ID_region_name == "Africa") %>%
count(ID_country_name, name = "name_countries")
filter(gsodi_dem_patterns, high_atrbs == 5, ID_year == 1975)  %>%
count(high_atrbs, name = "count_countries")
filter(gsodi_dem_patterns, ID_region_name == "Africa") %>%
count(ID_country_name, name = "name_countries")
filter(gsodi_dem_patterns, high_atrbs == 5) %>%
group_by(ID_year) %>%
count(high_atrbs, name = "count_countries")
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
n = n(),
count_countries = sum(high_atrbs == 5)
)
gsodi_dem_patterns %>%
group_by(ID_year) %>%
summarise(
n = n(),
count_countries = sum(high_atrbs == 5)
)
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
n = n(),
count_countries = sum(high_atrbs == 5)
)
gsodi_dem_patterns %>%
group_by(ID_year, high_atrbs) %>%
summarise(
count_countries = n())
- gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
gsodi_dem_patterns %>%
group_by(ID_year, ID_region_name) %>%
count(dem_perf_pattern,
name = "pattern_count")
ggplot(ap_abs_corrp_1990_2018, aes(x = ID_year, y = avg_score, fill = regime_status_name, color = regime_status_name))+
geom_line(size = 3) +
theme_minimal()
